type Query {
  conference(id: ID!): Conference!
  conferences: [Conference!]!
  allConferences: [Conference!]!
    @deprecated(reason: "Use `conferences` instead")
  contact(conferenceId: ID!, contactName: String!): Contact!
  locations: [Location!]!
  people: [Contact!]!
  sponsors: [Contact!]!
  interval(intervalTitle: String!, conferenceId: ID!): Interval!
  schedule(day: String!, conferenceId: ID!): Schedule!
  series(id: ID!): Series!
  allSeries: [Series!]!
  themes: [Theme!]!
  theme(conferenceId: ID!): Theme!
}
type Conference {
  id: ID!
  series: Series!
  name: String!
  organizer: Contact!
  year: String!
  startDate: String!
  endDate: String!
  slogan: String!
  websiteUrl: String!
  locations: [Location!]
  organizers: [Contact!]!
  mcs: [Contact!]
  partners: [Contact!]
  sponsors: [Contact!]!
  goldSponsors: [Contact!]
  silverSponsors: [Contact!]
  bronzeSponsors: [Contact!]
  platformSponsors: [Contact!]
  schedules: [Schedule!]!
  allSpeakers: [Contact!]
  speakers: [Contact!]
  keynoteSpeakers: [Contact!]
  fullTalkSpeakers: [Contact!]
  lightningTalkSpeakers: [Contact!]
  panelOnlySpeakers: [Contact!]
  workshopInstructors: [Contact!]
  talks: [Session!]
  workshops: [Session!]
  attendees: [Contact!]!
  keynotes: [Session!]!
  fullTalks: [Session!]!
  lightningTalks: [Session!]!
}
type Series {
  id: ID!
  name: String!
  conferences: [Conference!]!
}
type Contact {
  firstName: String!
  lastName: String!
  name: String!
  about: String!
  aboutShort: String
  company: String
  tagline: String
  image: Image!
  type: [ContactType!]!
  social: Social!
  keywords: [String!]
  location: Location!
  talks: [Session!]
  workshops: [Session!]
  noPhotography: Boolean
  country: Country! @deprecated(reason: "Use `location` instead")
}
type Image {
  url: String!
  title: String
  style: Style
}
type Style {
  backgroundSize: String!
}
type Social {
  homepage: String
  mastodon: String
  bluesky: String
  twitter: String
  github: String
  facebook: String
  googleMaps: String
  medium: String
  instagram: String
  linkedin: String
  youtube: String
  vk: String
  pinterest: String
  vimeo: String
  dribble: String
  devto: String
  tiktok: String
  twitch: String
}
type Location {
  name: String
  about: String
  image: Image
  social: Social
  country: Country
  city: String
  address: String
}
type Country {
  name: String!
  code: String!
}
type Session {
  type: SessionType!
  level: Level!
  title: String!
  hasTitle: Boolean!
  description: String
  keywords: [String!]
  location: Location
  people: [Contact!]
  urls: SessionUrls
  sessions: [Session!]
  parent: Interval!
  day: String
  begin: String
  end: String
  speakers: [Contact!]! @deprecated(reason: "Use `people` instead")
}
type SessionUrls {
  web: String
  slides: String
  video: String
  demo: String
  drawing: String
}
type Interval {
  begin: String!
  end: String!
  title: String
  sessions: [Session!]!
  location: Location
  mc: Contact
  urls: SessionUrls
  drawing: String
}
type Schedule {
  day: String!
  location: Location
  description: String
  intervals: [Interval!]!
}
type Theme {
  id: ID!
  fonts: Fonts!
  textures: [Image!]!
  colors: Colors!
  logos: Logos!
}
type Fonts {
  primary: String!
  secondary: String!
  variants: [Font!]!
}
type Font {
  family: String
  weight: String
  style: String
  fileName: String
  formats: [String!]
  href: String
}
type Colors {
  primary: String!
  secondary: String!
  text: String!
  background: String!
}
type Logos {
  black: WithWithoutText!
  colored: WithWithoutText!
  white: WithWithoutText!
}
type WithWithoutText {
  withoutText: Image!
  withText: Image!
}
"Type of the contact"
enum ContactType {
  PRESS
  SPEAKER
  TALK
  LIGHTNING_TALK
  KEYNOTE
  WORKSHOP
  WORKSHOP_HOST
  ORGANIZER
  SPONSOR
  GOLD_SPONSOR
  SILVER_SPONSOR
  BRONZE_SPONSOR
  PLATFORM_SPONSOR
  PARTNER
  ATTENDEE
}
"Type of the session"
enum SessionType {
  TALK
  LIGHTNING_TALK
  KEYNOTE
  MEETUP
  WORKSHOP
  PANEL
  BREAKFAST
  LUNCH
  COFFEE_BREAK
  ORGANIZATIONAL
  PARTY
}
"Level of the session"
enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
